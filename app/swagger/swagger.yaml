---
swagger: '2.0'
info:
  description: 'API that runs jobs using the LSF Cluster'
  version: '1.0.0'
  title: 'Delayed Jobs API'
  contact:
    email: 'chembl-help@ebi.ac.uk'
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
#host: Will be set dynamically by Swagger Description Blueprint
#basePath: Will be set dynamically by Swagger Description Blueprint
tags:
- name: 'status'
  description: 'Endpoints related to the status of the jobs'
- name: 'submission'
  description: 'Endpoints related to the submission of jobs'
schemes:
#- "https"
- "http"
tags:
- name: Example Job
  description: A Job that tests the system
  externalDocs:
    description: Example repository
    url: https://gitlab.ebi.ac.uk/chembl/chembl/delayed-jobs/test-job
- name: MMV Job
  description: A Job for the Malaria Data
  externalDocs:
    description: Source Repository
    url: https://gitlab.ebi.ac.uk/chembl/chembl/delayed-jobs/mmv_job
paths:
  /status/{jobId}:
    get:
      tags:
        - 'status'
      summary: 'Get status of a job by ID'
      description: 'Returns a single job'
      operationId: 'get_job_status_by_id'
      produces:
        - 'application/json'
      parameters:
        - name: "jobId"
          in: "path"
          description: "ID of job to return"
          required: true
          type: 'string'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/JobStatus'
        "400":
          description: 'Invalid ID supplied'
        "404":
          description: 'Job not found'
    patch:
      tags:
        - 'status'
      summary: 'Update the progress of a job'
      description: 'Updates the progress of a job, you can also add a comment on the progress'
      operationId: 'update_job_progress'
      produces:
        - 'application/json'
      parameters:
        - name: "jobId"
          in: "path"
          description: "ID of job to return"
          required: true
          type: 'string'
        - name: 'progress'
          in: 'formData'
          description: 'The percentage of progress of the job'
          required: true
          type: integer
          format: int64
          minimum: 0
          maximum: 100
        - name: 'status_log'
          in: 'formData'
          description: 'A comment on what is the job doing'
          type: 'string'
          example: 'Generating fingerprint...'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/JobStatus'
        "400":
          description: 'Invalid ID supplied'
        "404":
          description: 'Job not found'
      security:
        - JobKeyAuth: []
  /submit/test_job:
    post:
      tags:
        - 'Example Job'
      summary: 'Submits a Job that tests the system'
      operationId: 'submit_test_job'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - name: 'instruction'
          in: 'formData'
          description: "How do you want the job to behave"
          required: true
          type: 'string'
          enum: ['RUN_NORMALLY', 'FAIL']
        - name: 'seconds'
          in: 'formData'
          description: 'The amount of seconds that the job will run for'
          required: true
          type: integer
          format: int64
          minimum: 1
          maximum: 512
          enum: [1, 2, 4, 8, 16, 32, 64, 128, 256, 512]
        - name: 'api_url'
          in: 'formData'
          description: 'The url of an API to test a call to it during the job run'
          required: true
          type: 'string'
          default: 'https://www.ebi.ac.uk/chembl/api/data/similarity/CN1C(=O)C=C(c2cccc(Cl)c2)c3cc(ccc13)[C@@](N)(c4ccc(Cl)cc4)c5cncn5C/80.json'
        - name: 'input1'
          in: 'formData'
          description: 'Input File 1'
          required: true
          type: 'file'
        - name: 'input2'
          in: 'formData'
          description: 'Input File 2'
          required: true
          type: 'file'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubmissionResponse"
  /submit/mmv_job:
    post:
      tags:
        - 'MMV Job'
      summary: 'Submits a MMV Job'
      operationId: 'submit_mmv_job'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - name: 'input1'
          in: 'formData'
          description: 'Input File 1'
          required: true
          type: 'file'
        - name: 'standardise'
          in: 'formData'
          description: 'Standardise or not'
          required: true
          type: 'boolean'
        - name: '__ignore_cache__'
          in: 'formData'
          description: 'If true, the Delayed Jobs system will ignore the cache and run the job again'
          required: true
          type: 'boolean'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubmissionResponse"
securityDefinitions:
  JobKeyAuth:        # arbitrary name for the security scheme
    type: apiKey
    in: header       # can be "header", "query" or "cookie"
    name: X-Job-Key  # name of the header, query parameter or cookie
security:
  - JobKeyAuth: []
definitions:
  SubmissionResponse:
    type: 'object'
    properties:
      job_id:
        type: 'string'
  JobStatus:
    type: "object"
    properties:
      id:
        type: 'string'
      type:
        type: 'string'
      status:
        type: 'string'
      status_log:
        type: 'string'
      progress:
        type: 'string'
      created_at:
        type: 'string'
      started_at:
        type: 'string'
      finished_at:
        type: 'string'
      raw_params:
        type: 'string'
      expires_at:
        type: 'string'
      api_initial_url:
        type: 'string'
      docker_image_url:
        type: 'string'
      timezone:
        type: 'string'
      output_files_urls:
        type: 'array'
        items:
          type: 'string'