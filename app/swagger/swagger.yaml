---
swagger: '2.0'
info:
  description: 'API that runs jobs using the LSF Cluster'
  version: '1.0.0'
  title: 'Delayed Jobs API'
  contact:
    email: 'chembl-help@ebi.ac.uk'
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
#host: Will be set dynamically by Swagger Description Blueprint
#basePath: Will be set dynamically by Swagger Description Blueprint
tags:
- name: 'status'
  description: 'Endpoints related to the status of the jobs'
- name: 'submission'
  description: 'Endpoints related to the submission of jobs'
schemes:
- "https"
- "http"
tags:
- name: Example Job
  description: A Job that tests the system
  externalDocs:
    description: Example repository
    url: https://gitlab.ebi.ac.uk/chembl/chembl/delayed-jobs/test-job
- name: MMV Job
  description: A Job for the Malaria Data
  externalDocs:
    description: Source Repository
    url: https://gitlab.ebi.ac.uk/chembl/chembl/delayed-jobs/mmv_job
- name: Structure Search Job
  description: Chemical structure search job
  externalDocs:
    description: Source Repository
    url: https://gitlab.ebi.ac.uk/chembl/chembl/delayed-jobs/structure-search-job
- name: Download Job
  description: Download File generation job
  externalDocs:
    description: Source Repository
    url: https://gitlab.ebi.ac.uk/chembl/chembl/delayed-jobs/download-job
- name: Biological Sequence Search Job
  description: Chemical structure search job (BLAST)
  externalDocs:
    description: Source Repository
    url: https://gitlab.ebi.ac.uk/chembl/chembl/delayed-jobs/structure-search-job
- name: Admin
  description: Administrative tasks for the system
- name: CustomStatistics
  description: Enpoints to save custom statistics for every job, that are not saved by the generic stats
paths:
  /status/{job_id}:
    get:
      tags:
        - 'status'
      summary: 'Get status of a job by ID'
      description: 'Returns a single job'
      operationId: 'get_job_status_by_id'
      produces:
        - 'application/json'
      parameters:
        - name: "job_id"
          in: "path"
          description: "ID of job to return"
          required: true
          type: 'string'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/JobStatus'
        "400":
          description: 'Invalid ID supplied'
        "404":
          description: 'Job not found'
    patch:
      tags:
        - 'status'
      summary: 'Update the progress of a job'
      description: 'Updates the progress of a job, you can also add a comment on the progress'
      operationId: 'update_job_progress'
      produces:
        - 'application/json'
      parameters:
        - name: "job_id"
          in: "path"
          description: "ID of job to return"
          required: true
          type: 'string'
        - name: 'progress'
          in: 'formData'
          description: 'The percentage of progress of the job'
          required: true
          type: integer
          format: int64
          minimum: 0
          maximum: 100
        - name: 'status_log'
          in: 'formData'
          description: 'A comment on what is the job doing'
          type: 'string'
          example: 'Generating fingerprint...'
        - name: 'status_description'
          in: 'formData'
          description: 'A stringification of a JSON object describing the status.
          It is free for the job to determine the contents'
          type: 'string'
          example: '{"msg":"Smiles file loaded"}'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/JobStatus'
        "400":
          description: 'Invalid ID supplied'
        "404":
          description: 'Job not found'
      security:
        - JobKeyAuth: []
  /status/inputs/{job_id}/{input_key}:
    get:
      tags:
        - 'status'
      summary: 'Gets the input file given by the path'
      description: 'Returns the input file given by the path'
      operationId: 'get_job_input_file'
      produces:
        - 'application/octet-stream'
      parameters:
        - name: "job_id"
          in: "path"
          description: "ID of job that owns the input file"
          required: true
          type: 'string'
        - name: "input_key"
          in: "path"
          description: "Key of the input as given by the status endpoint"
          required: true
          type: 'string'
      responses:
        "200":
          description: "successful operation"
        "400":
          description: 'Invalid ID or path supplied'
        "404":
          description: 'Job or output file not found'
  /submit/test_job:
    post:
      tags:
        - 'Example Job'
      summary: 'Submits a Job that tests the system'
      operationId: 'submit_test_job'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - name: 'instruction'
          in: 'formData'
          description: "How do you want the job to behave"
          required: true
          type: 'string'
          enum: ['RUN_NORMALLY', 'FAIL']
        - name: 'seconds'
          in: 'formData'
          description: 'The amount of seconds that the job will run for'
          required: true
          type: integer
          format: int64
          minimum: 1
          maximum: 512
          enum: [1, 2, 4, 8, 16, 32, 64, 128, 256, 512]
        - name: 'api_url'
          in: 'formData'
          description: 'The url of an API to test a call to it during the job run'
          required: true
          type: 'string'
          default: 'https://www.ebi.ac.uk/chembl/api/data/similarity/CN1C(=O)C=C(c2cccc(Cl)c2)c3cc(ccc13)[C@@](N)(c4ccc(Cl)cc4)c5cncn5C/80.json'
        - name: 'input1'
          in: 'formData'
          description: 'Input File 1'
          required: true
          type: 'file'
        - name: 'input2'
          in: 'formData'
          description: 'Input File 2'
          required: true
          type: 'file'
        - name: 'dl__ignore_cache'
          in: 'formData'
          description: 'If true, the Delayed Jobs system will ignore the cache and run the job again even if the
          results were saved'
          required: true
          type: 'boolean'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubmissionResponse"
  /submit/mmv_job:
    post:
      tags:
        - 'MMV Job'
      summary: 'Submits a MMV Job'
      operationId: 'submit_mmv_job'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - name: 'input1'
          in: 'formData'
          description: 'Input File 1'
          required: true
          type: 'file'
        - name: 'standardise'
          in: 'formData'
          description: 'Standardise or not'
          required: true
          type: 'boolean'
        - name: 'dl__ignore_cache'
          in: 'formData'
          description: 'If true, the Delayed Jobs system will ignore the cache and run the job again even if the
          results were saved'
          required: true
          type: 'boolean'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubmissionResponse"
  /submit/structure_search_job:
    post:
      tags:
        - 'Structure Search Job'
      summary: 'Submits a Structure Search (Similarity, Substructure, Connectivity) Job'
      operationId: 'submit_structure_search_job'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - name: 'search_type'
          in: 'formData'
          description: 'Type of search to perform'
          required: true
          type: 'string'
          enum: ['SIMILARITY', 'SUBSTRUCTURE', 'CONNECTIVITY']
        - name: 'search_term'
          in: 'formData'
          description: 'Search term for the search, a smiles or a ChEMBL ID'
          required: true
          type: 'string'
        - name: 'threshold'
          in: 'formData'
          description: 'Threshold for the search, only used in similarity'
          required: true
          type: integer
          format: int64
          minimum: 40
          maximum: 100
        - name: 'dl__ignore_cache'
          in: 'formData'
          description: 'If true, the Delayed Jobs system will ignore the cache and run the job again even if the
          results were saved'
          required: true
          type: 'boolean'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubmissionResponse"
  /submit/download_job:
    post:
      tags:
        - 'Download Job'
    summary: 'Submits a job for creating a file with a subset of data to be downloaded from the interface (CSV, TSV, SDF)'
      operationId: 'submit_download_job'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - name: 'index_name'
          in: 'formData'
          description: 'Index in ES from which to get the data'
          required: true
          type: 'string'
          default: 'chembl_molecule'
        - name: 'query'
          in: 'formData'
          description: 'The stringified query from which to generate the file'
          required: true
          type: 'string'
          default: '{"query_string": {"query": "molecule_chembl_id:(CHEMBL59)"}}'
        - name: 'format'
          in: 'formData'
          description: 'The desired format of the file. SDF only applies for the index chembl_molecule'
          required: true
          type: 'string'
          default: 'CSV'
          enum: ['CSV', 'TSV', 'SDF']
        - name: 'context_obj'
          in: 'formData'
          description: 'stringifyied version of a JSON object describing the context of the query'
          type: 'string'
        - name: 'download_columns_group'
          in: 'formData'
          description: 'group of columns to be included in the final download file as defined in the ES Proxy API'
          required: true
          type: 'string'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubmissionResponse"
  /submit/biological_sequence_search_job:
    post:
      tags:
        - 'Biological Sequence Search Job'
      summary: 'Submits a Job that does the BLAST search'
      operationId: 'submit_biological_sequence_search_job'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - name: 'sequence'
          in: 'formData'
          description: "A sequence in any supported format. See https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?pageId=68167377#NCBIBLAST+(ProteinDatabases)-sequence"
          required: true
          type: 'string'
          default: ">sp|P35858|ALS_HUMAN Insulin-like growth factor-binding protein complex acid labile subunit OS=Homo sapiens GN=IGFALS PE=1 SV=1 \nMALRKGGLALALLLLSWVALGPRSLEGADPGTPGEAEGPACPAACVCSYDDDADELSVFC\nSSRNLTRLPDGVPGGTQALWLDGNNLSSVPPAAFQNLSSLGFLNLQGGQLGSLEPQALLG\nLENLCHLHLERNQLRSLALGTFAHTPALASLGLSNNRLSRLEDGLFEGLGSLWDLNLGWN\nSLAVLPDAAFRGLGSLRELVLAGNRLAYLQPALFSGLAELRELDLSRNALRAIKANVFVQ\nLPRLQKLYLDRNLIAAVAPGAFLGLKALRWLDLSHNRVAGLLEDTFPGLLGLRVLRLSHN\nAIASLRPRTFKDLHFLEELQLGHNRIRQLAERSFEGLGQLEVLTLDHNQLQEVKAGAFLG\nLTNVAVMNLSGNCLRNLPEQVFRGLGKLHSLHLEGSCLGRIRPHTFTGLSGLRRLFLKDN\nGLVGIEEQSLWGLAELLELDLTSNQLTHLPHRLFQGLGKLEYLLLSRNRLAELPADALGP\nLQRAFWLDVSHNRLEALPNSLLAPLGRLRYLSLRNNSLRTFTPQPPGLERLWLEGNPWDC\nGCPLKALRDFALQNPSAVPRFVQAICEGDDCQPPAYTYNNITCASPPEVVGLDLRDLSEA\nHFAPC"
        - name: 'matrix'
          in: 'formData'
          description: "https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?pageId=68167377#NCBIBLAST+(ProteinDatabases)-matrix"
          type: 'string'
          enum: ['BLOSUM45', 'BLOSUM50', 'BLOSUM62', 'BLOSUM80', 'BLOSUM90', 'PAM30', 'PAM70', 'PAM250', 'NONE']
          default: 'BLOSUM45'
        - name: 'alignments'
          in: 'formData'
          description: "https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?pageId=68167377#NCBIBLAST+(ProteinDatabases)-alignments"
          type: integer
          format: int64
          minimum: 0
          maximum: 1000
          enum: [0, 5, 10, 20, 50, 100, 150, 200, 250, 500, 750, 100]
          default: 50
        - name: 'scores'
          in: 'formData'
          description: "https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?pageId=68167377#NCBIBLAST+(ProteinDatabases)-scores"
          type: integer
          format: int64
          minimum: 0
          maximum: 1000
          enum: [0, 5, 10, 20, 50, 100, 150, 200, 250, 500, 750, 100]
          default: 50
        - name: 'exp'
          in: 'formData'
          description: "https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?pageId=68167377#NCBIBLAST+(ProteinDatabases)-exp"
          type: 'string'
          enum: ['1e-200', '1e-100', '1e-50', '1e-10', '1e-5', '1e-4', '1e-3', '1e-2', '1e-1', '1.0', '10', '100', '1000']
          default: '10'
        - name: 'dropoff'
          in: 'formData'
          description: "https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?pageId=68167377#NCBIBLAST+(ProteinDatabases)-dropoff"
          type: integer
          format: int64
          minimum: 0
          maximum: 10
          enum: [0, 2, 4, 6, 8, 10]
          default: 0
        - name: 'gapopen'
          in: 'formData'
          description: "https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?pageId=68167377#NCBIBLAST+(ProteinDatabases)-gapopen"
          type: integer
          format: int64
          minimum: -1
          maximum: 25
          enum: [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
          default: -1
        - name: 'gapext'
          in: 'formData'
          description: "https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?pageId=68167377#NCBIBLAST+(ProteinDatabases)-gapext"
          type: integer
          format: int64
          minimum: -1
          maximum: 10
          enum: [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
          default: -1
        - name: 'filter'
          in: 'formData'
          description: "https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?pageId=68167377#NCBIBLAST+(ProteinDatabases)-filter"
          type: 'string'
          enum: ['F', 'T']
          default: 'F'
        - name: 'seqrange'
          in: 'formData'
          description: "https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?pageId=68167377#NCBIBLAST+(ProteinDatabases)-seqrange"
          type: 'string'
          default: 'START-END'
        - name: 'gapalign'
          in: 'formData'
          description: 'https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?pageId=68167377#NCBIBLAST+(ProteinDatabases)-gapalign'
          type: 'boolean'
          default: True
        - name: 'wordsize'
          in: 'formData'
          description: "wordsize"
          type: integer
          format: int64
          minimum: 6
          maximum: 28
          enum: [6, 11, 28]
          default: 6
        - name: 'taxids'
          in: 'formData'
          description: "Specify one or more TaxIDs so that the BLAST search becomes taxonomically aware."
          type: 'string'
        - name: 'compstats'
          in: 'formData'
          description: "https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?pageId=68167377#NCBIBLAST+(ProteinDatabases)-compstats"
          type: 'string'
          enum: ['F', 'D', '1', '2', '3']
          default: 'F'
        - name: 'dl__ignore_cache'
          in: 'formData'
          description: 'If true, the Delayed Jobs system will ignore the cache and run the job again even if the
          results were saved'
          required: true
          type: 'boolean'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubmissionResponse"
  /admin/login:
    get:
      tags:
        - 'Admin'
      summary: 'Allows to login to the administration of the system.'
      description: 'If the correct password is given, it will return a token that is valid for 1 hour'
      operationId: 'admin_login'
      produces:
        - 'application/json'
      responses:
        "200":
          description: "login successful"
          schema:
            $ref: '#/definitions/AdminToken'
        "401":
          description: 'Could not verify username and password'
      security:
        - adminAuth: []
  /admin/delete_all_jobs_by_type:
    post:
      tags:
        - 'Admin'
      summary: 'Deletes all jobs of the type passed as parameter.'
      description: "Deletes all jobs of the type passed as parameter. If the job type does not exist it doesn't delete
      anything"
      operationId: 'admin_delete_all_jobs_by_type'
      produces:
        - 'application/json'
      parameters:
        - name: 'job_type'
          in: 'formData'
          description: 'Type of job to delete'
          required: true
          type: 'string'
      responses:
        "200":
          description: 'All jobs of the given type were deleted!'
          schema:
            $ref: '#/definitions/AdminOperationResult'
        "401":
          description: 'Invalid Admin token supplied'
      security:
        - adminTokenAuth: []
  /admin/delete_expired_jobs:
    post:
      tags:
        - 'Admin'
      summary: 'Deletes all the jobs that have expired.'
      description: 'Deletes all the job that have expired according to their expiration date'
      operationId: 'admin_delete_expired_jobs'
      produces:
        - 'application/json'
      responses:
        "200":
          description: 'All expired jobs were deleted!'
          schema:
            $ref: '#/definitions/AdminOperationResult'
        "401":
          description: 'Invalid Admin token supplied'
      security:
        - adminTokenAuth: []
  /admin/delete_output_files_for_job/{job_id}:
    get:
      tags:
        - 'Admin'
      summary: 'Deletes the output files for the job whose id is given as parameter'
      description: 'Deletes all the output files of a finished job. Useful for testing, debugging and other admin tasks'
      operationId: 'admin_delete_output_files_for_job'
      produces:
        - 'application/json'
      parameters:
        - name: "job_id"
          in: "path"
          description: "ID of job for which I will delete the output files"
          required: true
          type: 'string'
      responses:
        "200":
          description: "Result of the operation"
          schema:
            $ref: '#/definitions/AdminOperationResult'
        "400":
          description: 'Invalid ID supplied'
        "404":
          description: 'Job not found'
      security:
        - adminTokenAuth: []
  /custom_statistics/submit_statistics/test_job/{job_id}:
    post:
      tags:
        - 'CustomStatistics'
      summary: 'Submits custom statistics for the test job'
      operationId: 'custom_statistics_test_job'
      produces:
        - 'application/json'
      parameters:
        - name: "job_id"
          in: "path"
          description: "ID of job for which to save statistics"
          required: true
          type: 'string'
        - name: 'duration'
          in: 'formData'
          description: 'The duration requested for the job'
          required: true
          type: integer
          format: int64
          minimum: 0
          maximum: 100
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/StatisticsOperationResult'
        "400":
          description: 'Invalid ID supplied. Invalid data supplied'
        "404":
          description: 'Job not found'
      security:
        - JobKeyAuth: []
  /custom_statistics/submit_statistics/structure_search_job/{job_id}:
    post:
      tags:
        - 'CustomStatistics'
      summary: 'Submits custom statistics for the structure search job'
      operationId: 'custom_statistics_structure_search_job'
      produces:
        - 'application/json'
      parameters:
        - name: "job_id"
          in: "path"
          description: "ID of job for which to save statistics"
          required: true
          type: 'string'
        - name: 'search_type'
          in: 'formData'
          description: 'Type of search performed'
          required: true
          type: 'string'
        - name: 'time_taken'
          in: 'formData'
          description: 'The time taken to generate the results of the search'
          required: true
          type: number
          minimum: 0
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/StatisticsOperationResult'
        "400":
          description: 'Invalid ID supplied. Invalid data supplied'
        "404":
          description: 'Job not found'
      security:
        - JobKeyAuth: []
  /custom_statistics/submit_statistics/biological_sequence_search_job/{job_id}:
    post:
      tags:
        - 'CustomStatistics'
      summary: 'Submits custom statistics for the biological sequence search job'
      operationId: 'custom_statistics_biological_sequence_search_job'
      produces:
        - 'application/json'
      parameters:
        - name: "job_id"
          in: "path"
          description: "ID of job for which to save statistics"
          required: true
          type: 'string'
        - name: 'time_taken'
          in: 'formData'
          description: 'The time taken to generate the results of the search'
          required: true
          type: number
          minimum: 0
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/StatisticsOperationResult'
        "400":
          description: 'Invalid ID supplied. Invalid data supplied'
        "404":
          description: 'Job not found'
      security:
        - JobKeyAuth: []
  /custom_statistics/submit_statistics/mmv_job/{job_id}:
    post:
      tags:
        - 'CustomStatistics'
      summary: 'Submits custom statistics for the mmv job'
      operationId: 'custom_statistics_mmv_job'
      produces:
        - 'application/json'
      parameters:
        - name: "job_id"
          in: "path"
          description: "ID of job for which to save statistics"
          required: true
          type: 'string'
        - name: 'num_sequences'
          in: 'formData'
          description: 'The number of sequences processed in the job'
          required: true
          type: integer
          format: int64
          minimum: 0
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/StatisticsOperationResult'
        "400":
          description: 'Invalid ID supplied. Invalid data supplied'
        "404":
          description: 'Job not found'
      security:
        - JobKeyAuth: []
securityDefinitions:
  JobKeyAuth:        # arbitrary name for the security scheme
    type: apiKey
    in: header       # can be "header", "query" or "cookie"
    name: X-Job-Key  # name of the header, query parameter or cookie
  adminTokenAuth:
    type: apiKey
    in: header
    name: X-Admin-Key
  adminAuth:
    type: basic
security:
  - JobKeyAuth: []
  - adminAuth: []
  - adminTokenAuth: []
definitions:
  SubmissionResponse:
    type: 'object'
    properties:
      job_id:
        type: 'string'
  AdminToken:
    type: "object"
    properties:
      token:
        type: 'string'
  AdminOperationResult:
    type: "object"
    properties:
      operation_result:
        type: 'string'
  StatisticsOperationResult:
    type: "object"
    properties:
      operation_result:
        type: 'string'
  JobStatus:
    type: "object"
    properties:
      id:
        type: 'string'
      type:
        type: 'string'
      status:
        type: 'string'
      status_log:
        type: 'string'
      progress:
        type: 'string'
      created_at:
        type: 'string'
      started_at:
        type: 'string'
      finished_at:
        type: 'string'
      raw_params:
        type: 'string'
      expires_at:
        type: 'string'
      api_initial_url:
        type: 'string'
      docker_image_url:
        type: 'string'
      timezone:
        type: 'string'
      output_files_urls:
        type: 'array'
        items:
          type: 'string'